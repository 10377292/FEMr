% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/FEMr.smoothing.R
\name{smooth.FEM.PDE.SV.basis}
\alias{smooth.FEM.PDE.SV.basis}
\title{Compute a solution for a Spatial Spline problem with PDE penalization}
\usage{
smooth.FEM.PDE.SV.basis(locations = NULL, observations, basisobj,
 lambda, PDE_parameters, covariates = NULL, BC = NULL, GCV = FALSE,
 CPP_CODE = TRUE)
}
\arguments{
\item{locations}{A 2 column matrix where each row specifies the coordinates of the corresponding observation.}

\item{observations}{A vector specifying the observed values on the domain.
The locations of the observations can be specified with the \code{locations}
argument, otherwise the locations are intented to be the corresponding nodes of the mesh.
\code{NA} values are admissible to indicate the missing value on the corresponding node.}

\item{basisobj}{An object of class FEM; See \code{\link{create.FEM.basis}}.}

\item{lambda}{A scalar smoothing parameter.}

\item{PDE_parameters}{A list containing the space varying parameters of the penalizing PDE, with: \code{K} a function that for each point of the domain specified as a vector of length 2, returns  a 2-by-2 matrix indicating the diffusion coefficient matrix, \code{beta} a function that for each point of the domain specified as a vector of length 2, returns  a vector of length 2 indicating the advection coefficients and \code{c} a function that for each point of the domain specified as a vector of length 2, returns  a numeric indicating the reacttion coefficient.}

\item{covariates}{A design matrix where each row represents the covariates associated to each row.}

\item{BC}{A list with two vectors:
\code{Indices}, a vector with the indices for the border points to apply a Dirichlet Border Condition;
\code{Values} a vector with the values that the the nodes specified in \code{Indices} must assume.}

\item{GCV}{If \code{TRUE} computes the trace of the smoothing matrix, the estimate of the error's variance and
the Generalized Cross Validation parameter, for value of \code{lambda}.}

\item{CPP_CODE}{if \code{TRUE} avoids the computation of some additional elements, not necessary if the
functions working with the FEM basis are called with the flag \code{CPP_CODE=TRUE}}
}
\value{
A list with the following variables:
         \item{\code{fit.FEM}}{A FEM object of the FEM class defined by the coefficients vector resulting from smoothing.}
         \item{\code{PDEmisfit.FEM}}{A FEM object of the FEM class for the value of the Laplace operator}
         \item{\code{beta}}{If covariates is not \code{NULL}, a vector with the linear coefficients associated with each covariate.}
         \item{\code{edf}}{If GCV is \code{TRUE}, a vector with the trace of the smoothing matrix for each penalization parameter in the vector \code{lambda}.}
         \item{\code{stderr}}{If GCV is \code{TRUE}, a vector with the estimate of the standard deviation of the error for each penalization parameter in the vector \code{lambda}.}
         \item{\code{GCV}}{If GCV is \code{TRUE}, a vector with the GCV index for each penalization parameter in the vector \code{lambda}.}
}
\description{
Compute a solution for a for a Spatial Regression with PDE Penalization model. The PDE's parameter are space-variant functions.
}
\examples{
library(FEMr)
data(mesh.2D.rectangular)
observations = sin(0.2*pi*mesh.2D.rectangular$nodes[,1]) +
rnorm(n = nrow(mesh.2D.rectangular$nodes), sd = 0.1)
basisobj = create.FEM.basis(mesh.2D.rectangular, 2)
# Smoothing coefficient
lambda = c(10^-2)
K_func<-function(points)
{
mat<-c(0.01,0,0,1)
as.vector(0.5*mat \%*\% t(points[,1]^2))
}
b_func<-function(points)
{
rep(c(0,0), nrow(points))
}

c_func<-function(points)
{
rep(c(0), nrow(points))
}

u_func<-function(points)
{
rep(c(0), nrow(points))
}
# Space-varying smoothing
PDE_parameters = list(K = K_func, b = b_func, c = c_func, u = u_func)
FEM_CPP_PDE = smooth.FEM.PDE.SV.basis(observations = observations,
             basisobj = basisobj, lambda = lambda, PDE_parameters = PDE_parameters)
plot(FEM_CPP_PDE$fit.FEM)
}
\references{
Azzimonti, L. et al., 2014. Blood flow velocity field estimation via spatial regression with PDE penalization Blood flow velocity field estimation via spatial regression with PDE penalization. , (September), pp.37-41.
 Azzimonti, L. et al., 2014. Mixed Finite Elements for Spatial Regression with PDE Penalization. SIAM/ASA Journal on Uncertainty Quantification, 2(1), pp.305-335. Available at: http://epubs.siam.org/doi/abs/10.1137/130925426.
}

