% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/FEMr.objects.R
\name{create.FEM.basis}
\alias{create.FEM.basis}
\title{Define a Piecewise Polinomial basis}
\usage{
create.FEM.basis(mesh, order, CPP_CODE = FALSE)
}
\arguments{
\item{mesh}{An object of class \code{TRIMESH2D} representing a triangulation. See \link{create.MESH.2D}.}

\item{order}{Order of the polynomial restricted to each element of the triangulaton,
which may be either 1 or 2. When ORDER = 1 the basis system is piecewise linear. When
ORDER = 2 the basis system is piecewise quadratic. This parameter must be less or equal respect to the order
specified in the mesh creation through \link{create.MESH.2D}.}

\item{CPP_CODE}{if \code{TRUE} avoids the computation of some additional elements,
not necessary if the functions depending on the created basis are called with the same flag
\code{CPP_CODE=TRUE}}
}
\value{
An object of class \code{FEM}. This contains the \code{mesh} along with the following variables:
\item{\code{order}}{Order of elements.}
\item{\code{nbasis}}{The number of basis.}
\item{\code{J}}{The area of each triangle of the basis.}
\item{\code{transf}}{A matrix such that \code{transf[i,,]} is the 2-by-2 tranformation matrix that transforms the nodes of the reference triangle to the nodes of the i-th triangle.}
\item{\code{metric}}{A matrix such that \code{metric[i,,]} is the 2-by-2 matrix \code{transf[i,,]^{-1}*transf[i,,]^{-T}}. This matrix is usuful for the computation
of the integrals over the elements of the mesh. This is necessary for the computation of the discretized problem.}
}
\description{
Sets up a Finite Element basis for the analysis of functional bivariate data. This
defines the discetized functional space where the infinite-dimensional formulations are solved.
The basis' function are globally continuos, and linear or quadratic polynomial if restricted
to each element of the triangulation. See e.g. Sangalli, Ramsay, Ramsay (2013).
}
\examples{
## Creates an object TRIMESH2D with a concavity and second order nodes
mesh<-create.MESH.2D(nodes=rbind(c(0, 0), c(0, 1), c(0.5, 0.5), c(1, 1), c(1, 0)),
segments=rbind(c(1, 2), c(2, 3), c(3, 4), c(4, 5), c(5, 1)), order=1)
## Plot it
plot(mesh)
## Creates the basis object
basisobj = create.FEM.basis(mesh, order = 1)
}
\references{
Sangalli, L.M., Ramsay, J.O. & Ramsay, T.O., 2013. Spatial spline regression models. Journal of the Royal Statistical Society. Series B: Statistical Methodology, 75(4), pp.681-703.
}

